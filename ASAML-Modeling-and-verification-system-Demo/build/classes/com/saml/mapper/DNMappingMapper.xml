<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saml.inter.DNMappingMapper" >
  <resultMap id="BaseResultMap" type="com.saml.model.DNMapping" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="projectId" property="projectId" jdbcType="INTEGER" />
    <result column="demandId" property="demandId" jdbcType="INTEGER" />
    <result column="nodeId" property="nodeId" jdbcType="INTEGER" />
    <result column="addTime" property="addTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, projectId, demandId, nodeId, addTime, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dnmapping
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dnmapping
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.saml.model.DNMapping" useGeneratedKeys="true" keyProperty="id">
    insert into dnmapping (id, projectId, demandId, 
      nodeId, addTime, state
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{demandId,jdbcType=INTEGER}, 
      #{nodeId,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.saml.model.DNMapping" useGeneratedKeys="true" keyProperty="id">
    insert into dnmapping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        projectId,
      </if>
      <if test="demandId != null" >
        demandId,
      </if>
      <if test="nodeId != null" >
        nodeId,
      </if>
      <if test="addTime != null" >
        addTime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="demandId != null" >
        #{demandId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null" >
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.saml.model.DNMapping" >
    update dnmapping
    <set >
      <if test="projectId != null" >
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="demandId != null" >
        demandId = #{demandId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null" >
        nodeId = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        addTime = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.saml.model.DNMapping" >
    update dnmapping
    set projectId = #{projectId,jdbcType=INTEGER},
      demandId = #{demandId,jdbcType=INTEGER},
      nodeId = #{nodeId,jdbcType=INTEGER},
      addTime = #{addTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectListByDemandId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dnmapping
    where demandId = #{demandId,jdbcType=INTEGER}
    and state=1
  </select>
   <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer" >
   update dnmapping
    set state = 2
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteListByProjectId" parameterType="java.lang.Integer" >
   update dnmapping
    set state = 2
    where projectId = #{projectId,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteListByDemandId" parameterType="java.lang.Integer" >
   update dnmapping
    set state = 2
    where demandId = #{demandId,jdbcType=INTEGER}
  </update>
   <select id="selectByDemandIdAndNodeId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from dnmapping
    where demandId = #{demandId,jdbcType=INTEGER}
    and nodeId = #{nodeId,jdbcType=INTEGER}
    and state =1
  </select>
  <select id="selectListByNodeId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dnmapping
    where nodeId = #{nodeId,jdbcType=INTEGER}
    and state=1
  </select>
</mapper>
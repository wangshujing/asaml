<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saml.inter.ReachablePathMapper" >
  <resultMap id="BaseResultMap" type="com.saml.model.ReachablePath" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="projectId" property="projectId" jdbcType="INTEGER" />
    <result column="verifyresultId" property="verifyresultId" jdbcType="INTEGER" />
    <result column="pathExp" property="pathExp" jdbcType="VARCHAR" />
    <result column="addTime" property="addTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, projectId, verifyresultId, pathExp, addTime, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reachablepath
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reachablepath
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.saml.model.ReachablePath" useGeneratedKeys="true" keyProperty="id">
    insert into reachablepath (id, projectId, verifyresultId, 
      pathExp, addTime, state
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{verifyresultId,jdbcType=INTEGER}, 
      #{pathExp,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.saml.model.ReachablePath" useGeneratedKeys="true" keyProperty="id">
    insert into reachablepath
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        projectId,
      </if>
      <if test="verifyresultId != null" >
        verifyresultId,
      </if>
      <if test="pathExp != null" >
        pathExp,
      </if>
      <if test="addTime != null" >
        addTime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="verifyresultId != null" >
        #{verifyresultId,jdbcType=INTEGER},
      </if>
      <if test="pathExp != null" >
        #{pathExp,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.saml.model.ReachablePath" >
    update reachablepath
    <set >
      <if test="projectId != null" >
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="verifyresultId != null" >
        verifyresultId = #{verifyresultId,jdbcType=INTEGER},
      </if>
      <if test="pathExp != null" >
        pathExp = #{pathExp,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        addTime = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.saml.model.ReachablePath" >
    update reachablepath
    set projectId = #{projectId,jdbcType=INTEGER},
      verifyresultId = #{verifyresultId,jdbcType=INTEGER},
      pathExp = #{pathExp,jdbcType=VARCHAR},
      addTime = #{addTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <update id="logicalDeleteListByProjectId" parameterType="java.lang.Integer" >
   update reachablepath
    set state = 2
    where projectId = #{projectId,jdbcType=INTEGER}
  </update>
    <select id="selectReachablePathListByProjectId" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from reachablepath 
    where 
    state=1 and projectId=#{projectId,jdbcType=INTEGER}
    and  pathExp like #{keyword,jdbcType=VARCHAR}
    order by id 
  </select>
  <select id="selectReachablePathListPage" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from reachablepath 
    where 
    state=1 and projectId=#{projectId,jdbcType=INTEGER}
    and  pathExp like #{keyword,jdbcType=VARCHAR}
    order by id 
  </select>
</mapper>
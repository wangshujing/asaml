<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saml.inter.DTMappingMapper" >
  <resultMap id="BaseResultMap" type="com.saml.model.DTMapping" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="demandId" property="demandId" jdbcType="INTEGER" />
    <result column="typeId" property="typeId" jdbcType="INTEGER" />
    <result column="projectId" property="projectId" jdbcType="INTEGER" />
    <result column="addTime" property="addTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, demandId, typeId, projectId, addTime, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dtmapping
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dtmapping
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.saml.model.DTMapping" useGeneratedKeys="true" keyProperty="id">
    insert into dtmapping (id, demandId, typeId, 
      projectId, addTime, state
      )
    values (#{id,jdbcType=INTEGER}, #{demandId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{projectId,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.saml.model.DTMapping" useGeneratedKeys="true" keyProperty="id">
    insert into dtmapping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="demandId != null" >
        demandId,
      </if>
      <if test="typeId != null" >
        typeId,
      </if>
      <if test="projectId != null" >
        projectId,
      </if>
      <if test="addTime != null" >
        addTime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="demandId != null" >
        #{demandId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.saml.model.DTMapping" >
    update dtmapping
    <set >
      <if test="demandId != null" >
        demandId = #{demandId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        typeId = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        addTime = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.saml.model.DTMapping" >
    update dtmapping
    set demandId = #{demandId,jdbcType=INTEGER},
      typeId = #{typeId,jdbcType=INTEGER},
      projectId = #{projectId,jdbcType=INTEGER},
      addTime = #{addTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByTypeId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dtmapping
    where typeId = #{typeId,jdbcType=INTEGER}
    and state = 1
  </select>
  <update id="logicalDeleteByTypeId" parameterType="java.lang.Integer" >
   update dtmapping
    set state = 2
    where typeId = #{typeId,jdbcType=INTEGER}
  </update>
   <select id="selectByDemandId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dtmapping
    where demandId = #{demandId,jdbcType=INTEGER}
    and state = 1
  </select>
  <update id="logicalDeleteListByProjectId" parameterType="java.lang.Integer" >
   update dtmapping
    set state = 2
    where projectId = #{projectId,jdbcType=INTEGER}
  </update>
</mapper>
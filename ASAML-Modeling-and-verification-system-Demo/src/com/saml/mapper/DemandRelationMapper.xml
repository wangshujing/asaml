<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saml.inter.DemandRelationMapper" >
  <resultMap id="BaseResultMap" type="com.saml.model.DemandRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="projectId" property="projectId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="elementId" property="elementId" jdbcType="INTEGER" />
    <result column="combinationId" property="combinationId" jdbcType="INTEGER" />
    <result column="expression" property="expression" jdbcType="VARCHAR" />
    <result column="addTime" property="addTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, projectId, type, elementId, combinationId, expression, addTime, remark, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from demandrelation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from demandrelation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.saml.model.DemandRelation" useGeneratedKeys="true" keyProperty="id">
    insert into demandrelation (id, projectId, type, 
      elementId, combinationId, expression, 
      addTime, remark, state
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{elementId,jdbcType=INTEGER}, #{combinationId,jdbcType=INTEGER}, #{expression,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.saml.model.DemandRelation" useGeneratedKeys="true" keyProperty="id">
    insert into demandrelation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        projectId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="elementId != null" >
        elementId,
      </if>
      <if test="combinationId != null" >
        combinationId,
      </if>
      <if test="expression != null" >
        expression,
      </if>
      <if test="addTime != null" >
        addTime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="elementId != null" >
        #{elementId,jdbcType=INTEGER},
      </if>
      <if test="combinationId != null" >
        #{combinationId,jdbcType=INTEGER},
      </if>
      <if test="expression != null" >
        #{expression,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.saml.model.DemandRelation" >
    update demandrelation
    <set >
      <if test="projectId != null" >
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="elementId != null" >
        elementId = #{elementId,jdbcType=INTEGER},
      </if>
      <if test="combinationId != null" >
        combinationId = #{combinationId,jdbcType=INTEGER},
      </if>
      <if test="expression != null" >
        expression = #{expression,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        addTime = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.saml.model.DemandRelation" >
    update demandrelation
    set projectId = #{projectId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      elementId = #{elementId,jdbcType=INTEGER},
      combinationId = #{combinationId,jdbcType=INTEGER},
      expression = #{expression,jdbcType=VARCHAR},
      addTime = #{addTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer" >
   update demandrelation
    set state = 2
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteListByProjectId" parameterType="java.lang.Integer" >
   update demandrelation
    set state = 2
    where projectId = #{projectId,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteListByCombinationIdOrElementId" parameterType="java.lang.Integer" >
   update demandrelation
    set state = 2
    where elementId = #{id,jdbcType=INTEGER} or combinationId = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectDemandRelationCount" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(*)
    from demandrelation
    where 
    state=1 and projectId = #{projectId,jdbcType=INTEGER} 
  </select>
  <select id="selectDemandRelationCountByCombinationId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(*)
    from demandrelation
    where 
    state=1 and combinationId = #{combinationId,jdbcType=INTEGER} 
  </select>
  <select id="selectDemandRelationListByCombinationId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from demandrelation
    where  state=1 and
    combinationId = #{combinationId,jdbcType=INTEGER}
     order by id  
  </select>
  <select id="selectDemandRelationList" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from demandrelation
    where  state=1 and
    projectId = #{projectId,jdbcType=INTEGER} 
     order by id  
  </select>
</mapper>